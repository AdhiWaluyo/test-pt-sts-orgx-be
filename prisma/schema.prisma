// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @db.VarChar(255)
  password    String    @db.VarChar(255)
  roleId      Int       @default(1) @map("role_id")
  provinceId  Int?      @map("province_id")
  cityId      Int?      @map("city_id")
  districtId  Int?      @map("district_id")
  villageId   Int?      @map("village_id")
  isActive    Boolean   @default(true)
  createdById Int?      @map("created_by_id")
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(3)

  accessTokens AccessToken[]

  // Region relations
  province Region? @relation("UserProvince", fields: [provinceId], references: [id])
  city     Region? @relation("UserCity", fields: [cityId], references: [id])
  district Region? @relation("UserDistrict", fields: [districtId], references: [id])
  village  Region? @relation("UserVillage", fields: [villageId], references: [id])

  role Role @relation(fields: [roleId], references: [id])

  @@index([isActive])
  @@index([username])
  @@index([roleId])
  @@index([provinceId])
  @@index([cityId])
  @@index([districtId])
  @@index([villageId])
  @@index([createdById])
  @@map("users")
}

model Region {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  type       Int       @default(1) // enum bisa dibuat
  provinceId Int?      @map("province_id")
  cityId     Int?      @map("city_id")
  districtId Int?      @map("district_id")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(3)

  // Member relations
  membersProvince  Member[] @relation("Province")
  membersCity      Member[] @relation("City")
  membersDistrict  Member[] @relation("District")
  membersKelurahan Member[] @relation("Village")

  // User relations
  usersProvince User[] @relation("UserProvince")
  usersCity     User[] @relation("UserCity")
  usersDistrict User[] @relation("UserDistrict")
  usersVillage  User[] @relation("UserVillage")

  @@index([provinceId])
  @@index([cityId])
  @@index([districtId])
  @@map("regions")
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String?
  accessLevel Int       @default(1) @map("access_level")
  createdById Int?      @map("created_by_id")
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(3)
  User        User[]

  @@index([createdById])
  @@map("roles")
}

model Member {
  id    Int    @id @default(autoincrement())
  nik   String @db.Char(16)
  name  String @db.VarChar(100)
  phone String @db.VarChar(20)

  provinceId Int @default(1) @map("province_id")
  cityId     Int @default(1) @map("city_id")
  districtId Int @default(1) @map("district_id")
  villageId  Int @default(1) @map("village_id")

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)

  province Region @relation("Province", fields: [provinceId], references: [id])
  city     Region @relation("City", fields: [cityId], references: [id])
  district Region @relation("District", fields: [districtId], references: [id])
  village  Region @relation("Village", fields: [villageId], references: [id])

  @@index([provinceId])
  @@index([cityId])
  @@index([districtId])
  @@index([villageId])
  @@map("members")
}

model AccessToken {
  id        String   @id
  userId    Int      @map("user_id")
  revoked   Boolean  @default(false)
  expiresAt DateTime @map("expires_at") @db.Timestamptz(3)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)

  // Relation
  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("access_tokens")
}
